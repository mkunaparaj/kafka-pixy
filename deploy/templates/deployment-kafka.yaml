---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.kafka.name }}
  labels:
    app: {{ .Values.kafka.name }}
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  storageClassName: {{ .Values.kafka.name }}
  hostPath:
    path: /tmp/kafka-pixy-sandbox-data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.kafka.name }}
spec:
  storageClassName: {{ .Values.kafka.name }}
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kafka.name }}
  labels:
    app: {{ .Values.kafka.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.kafka.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.kafka.name }}
    spec:
      containers:
      - name: {{ .Values.kafka.name }}
        image: wurstmeister/kafka:latest
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "{{ .Values.zk.service.clusterIP }}:{{ .Values.zk.service.port }}" 
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://{{ .Values.kafka.service.clusterIP }}:{{ .Values.kafka.service.port }}"
        volumeMounts: 
        - name: {{ .Values.kafka.name }}
          mountPath: /kafka
      volumes:
      - name: {{ .Values.kafka.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.kafka.name }}
